from django.db.models.signals import m2m_changed
from django.dispatch import receiver
from django.core.mail import send_mail
from django.template.loader import render_to_string
from django.conf import settings
from .models import Article
import logging

logger = logging.getLogger(__name__)


@receiver(m2m_changed, sender=Article.categories.through)
def notify_subscribers(sender, instance, action, **kwargs):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ —Å–≤—è–∑—ã–≤–∞–Ω–∏–∏ —Å—Ç–∞—Ç—å–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    """
    # –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–≤—è–∑–µ–π (–Ω–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏)
    if action != "post_add":
        return

    for category in instance.categories.all():
        subscribers = category.subscribers.exclude(id=instance.author.id)
        logger.info(f"üì¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category.name}': {subscribers.count()} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")

        for user in subscribers:
            logger.info(f"‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –¥–ª—è: {user.email}")
            send_notification(user, instance, category)


def send_notification(user, article, category):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)"""
    subject = f'–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{category.name}"'
    html_message = render_to_string('account/email/new_article_notification.html', {
        'user': user,
        'article': article,
        'category': category,
        'domain': settings.DOMAIN
    })

    send_mail(
        subject=subject,
        message='',
        html_message=html_message,
        from_email=settings.DEFAULT_FROM_EMAIL,
        recipient_list=[user.email],
        fail_silently=False
    )